@model Its.Systems.HR.Interface.Web.ViewModels.EditSessionViewModel

@{
    ViewBag.Title = "Ändra tillfälle";
}

<h2>Ändra tillfälle</h2>
<h4><em>@Model.NameOfSession</em></h4>
<hr />

@using (Html.BeginForm("EditSession", "Activity", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(n => n.SessionId)

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        <label for="Activity_Id" class="control-label">Tillfälle för aktivitet</label>
        <div>
            @Html.DropDownListFor(n => n.Activity.Id, (IEnumerable<SelectListItem>)ViewBag.ActivityId, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Activity.Id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NameOfSession)
        <div>
            @Html.EditorFor(model => model.NameOfSession, new { htmlAttributes = new { @class = "form-control", placeholder = "Exempel: 2017" } })
            @Html.ValidationMessageFor(model => model.NameOfSession, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StartDate)
        <div class='input-group date' id='datetimepicker1'>
            @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
            <span class="input-group-addon">
                <span class="glyphicon glyphicon-calendar"></span>
            </span>
        </div>
        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EndDate)
        <div class='input-group date' id='datetimepicker2'>
            @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
            <span class="input-group-addon">
                <span class="glyphicon glyphicon-calendar"></span>
            </span>
        </div>
        @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
    </div>


    <div class="form-group">
        <label for="NameOfLocation">Plats</label>
        <div>
            <input type="text" id="NameOfLocation" name="NameOfLocation" value="@ViewBag.NameOfLocation" class="form-control ui-autocomplete"
                   data-autocomplete="@Url.Action("AutoCompleteLocations", "Activity")" />
            @*@Html.ValidationMessageFor(model => model.NameOfLocation.Id, "", new { @class = "text-danger" })*@
        </div>
    </div>

    <div class="form-group">
        <label for="HrPerson_Id">Ansvarig HR</label>
        <div>
            @Html.DropDownListFor(n => n.HrPerson, (IEnumerable<SelectListItem>)ViewBag.HrPersonId, "-- Ingen ansvarig HR --", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.HrPerson, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label for="tagsInput">Etiketter</label>
        <div class="form-inline">
            <div class="form-group">
                <input type="text" id="tagsInput" name="tagsInput" class="form-control" />
            </div>
            <button type="button" class="btn btn-default js-add-tag-from-edit" data-sessionId="@Model.SessionId">Lägg till</button>
        </div>
        <div id="selectedTags">
            @foreach (var tag in Model.AddedTags)
            {
                <span data-tagId="@tag.Id" data-sessionId="@Model.SessionId" class="label label-primary js-remove-tag-from-edit">
                    @tag.Name&nbsp;<span class="glyphicon glyphicon-remove"></span>
                </span>
            }
        </div>
    </div>

    <div class="form-group">
        <div class="m-t-50">
            <button class="btn btn-default">
                <i class="glyphicon glyphicon-ok"></i> Ändra tillfälle
            </button>
            @*<a href="@Url.Action("Index")" class="btn btn-danger">
                    <i class="glyphicon glyphicon-remove"></i> Avbryt
                </a>*@
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>

    @*<script src="~/Scripts/moment.min.js"></script>*@
    <script src="~/Scripts/moment-with-locales.min.js"></script>
    <script src="~/Scripts/bootstrap-datetimepicker.min.js"></script>

    <script>
        $(document)
            .ready(function () {

                // Init Bootstrap 3 datepickers (addon)
                //moment.locale('sv');
                $('#datetimepicker1')
                    .datetimepicker({
                        locale: 'sv'
                    });
                $('#datetimepicker2')
                    .datetimepicker({
                        locale: 'sv'
                    });


                // AUTOCOMPLETE
                // submits form upon selecting a value
                var submitAutocompleteForm = function (event, ui) {
                    var $input = $(this); // the HTML element (Textbox)

                    // selected value
                    $input.val(ui.item.label); // ui.item.label = the label value (product)

                    window.location.href = "/Product/Details?id=" + ui.item.label;
                };

                var createAutocomplete = function () {
                    var $input = $(this); // the HTML element (Textbox)

                    var options = {
                        // selecting the source by finding elements with the 'data-' attribute
                        source: $input.attr("data-autocomplete") // Required
                        //select: submitAutocompleteForm // Optional
                    };

                    // apply options
                    $input.autocomplete(options);
                };

                // targets input elements with the 'data-' attributes and each time the input changes
                // it calls the 'createAutocomplete' function
                $("input[data-autocomplete]").each(createAutocomplete);


                // TAGS
                $('.js-add-tag-from-edit').on('click', function (e) {

                    var link = $(e.target);
                    var addedTag = $("#tagsInput").val();

                    $.ajax({
                        url: "@Url.Action("AddTagToSession", "Activity")",
                        type: "POST",
                        data: { sessionId: link.attr("data-sessionId"), tagName: addedTag },
                        success: function (data) {
                            if (data.Success) {
                                var html = '<span data-tagId="' + //TODO: tagId!!!!
                                    data.TagId +
                                    '" data-sessionId="' + link.attr("data-sessionId") + '" class="label label-primary js-remove-tag-from-edit">' +
                                    addedTag +
                                    '&nbsp;<span class="glyphicon glyphicon-remove"></span></span>';
                                $(html).hide().appendTo("#selectedTags").fadeIn();

                                $("#tagsInput").val("");
                            } else {
                                link.after(' <span class="alert alert-danger js-fadeOutThisMessage" role="alert">Redan tillagd!</span>');
                                $(".js-fadeOutThisMessage").fadeOut(2000, function () {
                                    $(this).remove();
                                });
                            }
                        },
                        error: function () {
                            alert("Anropet misslyckades, prova gärna igen.");
                        }
                    });

                });

                $('body').on('click', '.js-remove-tag-from-edit', function (e) {

                    var link = $(e.target);

                    $.ajax({
                        url: "@Url.Action("RemoveTagFromSession", "Activity")",
                        type: "POST",
                        data: { sessionId: link.attr("data-sessionId"), tagId: link.attr("data-tagId") },
                        success: function () {
                            link.fadeOut(function () {
                                $(this).remove();
                            });
                        },
                        error: function () {
                            alert("Anropet misslyckades, prova gärna igen.");
                        }
                    });

                });


                // HANDLE ENTER-BUTTON WHEN ADDING TAGS
                $(document).on("keypress", "#tagsInput", function (event) {
                    if (event.keyCode == 13) {
                        event.preventDefault();
                        $(".js-add-tag-from-edit").trigger("click");
                    }
                });
            });
    </script>
}
