@model Its.Systems.HR.Interface.Web.ViewModels.ParticipantSummaryViewModel

@{
    ViewBag.Title = "Översikt person";
}

<h2>@Model.FullName</h2>

<div class="row">
    <div class="col-md-4">
        <h4>Deltagit på följande kurstillfällen</h4>
        <ul id="allSessionsForParticipant">
            @foreach (var session in Model.Sessions)
            {
                <li>
                    <a href="@Url.Action("Index", "Home")">@session.Name</a>
                    <span> (@session.StartDate.Year-@session.StartDate.Month-@session.StartDate.Day)</span>
                    <span class="label label-warning pull-right listedParticipantRemove js-delete-sessionParticipant" data-sessionId="@session.Id" data-personId="@Model.PersonId">Ta bort</span>
                </li>
            }
        </ul>
        <div id="statisticsSummary">
            @Html.Action("ParticipantStatisticSummary", new { personId = Model.PersonId })
        </div>
    </div>
    <div class="col-md-6 col-md-offset-1">
        <div class="form-horizontal">
            <div class="form-group">
                <label for="Id" class="control-label col-md-2">Lägg till kurstillfälle</label>
                <div class="col-md-10">
                    @Html.DropDownListFor(n => n.Sessions.First().Id, Model.AllSessions, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Sessions, "", new { @class = "text-danger" })
                    <button type="button" class="btn btn-default js-add-sessionParticipant" data-personId="@Model.PersonId">
                        <span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Lägg till kurstillfälle för person
                    </button>
                </div>
            </div>

            <div class="form-group">
                <label for="Comments" class="control-label col-md-2">Kommentarer</label>
                @*@using (Html.BeginForm("SaveComments", "Participant", routeValues: new { personId = Model.PersonId }, method: FormMethod.Post))
                    {*@
                <div class="col-md-10">
                    @Html.TextAreaFor(n => n.Comments, 10, 40, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
                    <button type="button" class="btn btn-default js-save-participantComment" data-personId="@Model.PersonId">
                        <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span> Spara kommentar
                    </button>
                </div>
                @*}*@
            </div>

            <div class="form-group">
                <label for="Wishes" class="control-label col-md-2">Önskemål</label>
                @*@using (Html.BeginForm("SaveWishes", "Participant", routeValues: new { personId = Model.PersonId }, method: FormMethod.Post))
                    {*@
                <div class="col-md-10">
                    @Html.TextAreaFor(n => n.Wishes, 10, 40, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Wishes, "", new { @class = "text-danger" })
                    <button type="button" class="btn btn-default js-save-participantWish" data-personId="@Model.PersonId">
                        <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span> Spara önskemål
                    </button>
                </div>
                @*}*@
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>

        // TODO: Proper error handling

        $(document).ready(function () {

            $("body").on("click", ".js-delete-sessionParticipant", function (e) {
                var link = $(e.target);


                bootbox.confirm({
                    title: "Vänligen bekräfta",
                    message: "Vill du verkligen ta bort detta kurstillfälle för personen?",
                    buttons: {
                        cancel: {
                            label: '<i class="glyphicon glyphicon-remove"></i> Avbryt'
                        },
                        confirm: {
                            label: '<i class="glyphicon glyphicon-ok"></i> Ta bort',
                            className: 'btn-danger'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            $.ajax({
                                url: "/Participant/RemovePersonFromSession",
                                type: "POST",
                                data: { sessionId: link.attr("data-sessionId"), personId: link.attr("data-personId") },
                                success: function () {
                                    link.parents("li")
                                        .fadeOut(function () {
                                            $(this).remove();

                                            $.ajax({
                                                url: "/Participant/ParticipantStatisticSummary",
                                                type: "GET",
                                                data: { personId: link.attr("data-personId") },
                                                success: function (result2) {
                                                    $("#statisticsSummary").html(result2);
                                                },
                                                error: function () {
                                                    alert("Anropet misslyckades, prova gärna igen.");
                                                }
                                            });
                                        });
                                },
                                error: function () {
                                    alert("Anropet misslyckades, prova gärna igen.");
                                }
                            });
                        }
                    }
                });

            });


            $(".js-add-sessionParticipant").click(function (e) {
                var link = $(e.target);
                var sessionId = $("#Id").val();


                $.ajax({
                    url: "/Participant/AddPersonToSession",
                    type: "POST",
                    data: { sessionId: sessionId, personId: link.attr("data-personId") },
                    success: function (result) {
                        if (result.Success) {
                            var html = '<li><a href="/Index/Home">' + result.SessionName + '</a><span> (' + result.Year + '-' + result.Month + '-' + result.Day + ')</span><span class="label label-warning pull-right listedParticipantRemove js-delete-sessionParticipant" data-sessionId="' + result.SessionId + '" data-personId="' + result.PersonId + '">Ta bort</span></li>';
                            $(html).hide().appendTo("#allSessionsForParticipant").fadeIn();

                            $.ajax({
                                url: "/Participant/ParticipantStatisticSummary",
                                type: "GET",
                                data: { personId: link.attr("data-personId") },
                                success: function (result2) {
                                    $("#statisticsSummary").html(result2);
                                },
                                error: function () {
                                    alert("Anropet misslyckades, prova gärna igen.");
                                }
                            });

                        } else {
                            link.after(' <span class="alert alert-danger js-fadeOutThisMessage" role="alert">Finns redan!</span>');

                            $(".js-fadeOutThisMessage").fadeOut(2000, function () {
                                $(this).remove();
                            });
                        }
                    }
                });
            });

            $(".js-save-participantComment").click(function (e) {
                var link = $(e.target);
                var comments = $("#Comments").val();

                $.ajax({
                    url: "/Participant/SaveComments",
                    type: "POST",
                    data: { personId: link.attr("data-personId"), comments: comments },
                    success: function () {
                        link.after(' <span class="alert alert-success js-fadeOutThisMessage" role="alert">Kommentarer sparade!</span>');

                        $(".js-fadeOutThisMessage").fadeOut(2000, function () {
                            $(this).remove();
                        });
                    },
                    error: function () {
                        alert("Anropet misslyckades, prova gärna igen.");
                    }
                });
            });

            $(".js-save-participantWish").click(function (e) {
                var link = $(e.target);
                var wishes = $("#Wishes").val();

                $.ajax({
                    url: "/Participant/SaveWishes",
                    type: "POST",
                    data: { personId: link.attr("data-personId"), wishes: wishes },
                    success: function () {
                        link.after(' <span class="alert alert-success js-fadeOutThisMessage" role="alert">Önskemål sparade!</span>');

                        $(".js-fadeOutThisMessage").fadeOut(2000, function () {
                            $(this).remove();
                        });
                    },
                    error: function () {
                        alert("Anropet misslyckades, prova gärna igen.");
                    }
                });
            });

        });
    </script>
}